#!/usr/bin/env ruby
# coding: utf-8

require "thor"
require "csv"
require "uri"
require 'ostruct'

class RedirectConfig < Thor

  desc "csv_to_apache <CSVFILE", "Creates RewriteRules for Apache web server from given CSVFILE as complementary to apache_to_csv."
  method_option :format, default: 'dos', aliases:'-f', enum: %w{unix dos}
  def csv_to_apache
    line_no = 0
    row_sep = case options[:format] when 'dos' then "\r\n" else "\n" end

    CSV($stdin, row_sep: row_sep, headers: true).each do |in_row|
      line_no += 1

      pattern = in_row['Pattern']
      pattern.tr!(" ", ".")
      pattern = "^#{Regexp.escape(pattern)}$" unless boolean(in_row['re'])
      destination = in_row['Destination']
      destination.gsub!(" ", "%20")
      condition = in_row['Condition']
      f = []
      r = in_row['R']
      f << "r=#{r}" if r
      %w{NE NC L QSA QSD}.each do |n|
        f << n.downcase if boolean(in_row[n])
      end
      flags = "[#{f.join(',')}]" unless f.empty?

      puts "RewriteCond\t#{condition}" if condition.to_s.match(/\w/)
      puts "RewriteRule\t#{pattern} #{destination} #{flags}"
    end
  end

  no_commands do
    def boolean(str)
      if /^\s*[fFnN]/.match(str)
        false
      else
        true
      end
    end
  end
end

RedirectConfig.start(ARGV)
